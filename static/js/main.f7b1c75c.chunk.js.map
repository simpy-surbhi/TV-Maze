{"version":3,"sources":["layouts/App/components/Header/styles.ts","layouts/App/components/Header/Header.tsx","layouts/App/components/Rating/styles.ts","layouts/App/components/Rating/RatingInformation.tsx","layouts/App/components/AvatarInformation/styles.ts","layouts/App/components/AvatarInformation/AvatarItem.tsx","layouts/App/components/SideInformation/styles.ts","layouts/App/components/SideInformation/SideInformation.tsx","views/Show/styles.ts","config/Config.ts","ApiClient.ts","lib/objectToUrlParams.ts","hooks/useApiClient.ts","util/DateFormat.ts","util/helper.ts","views/Show/EpisodeItem.tsx","views/Show/ShowSeasonsEpisodes.tsx","views/Show/CastInformation.tsx","views/Show/ShowImages.tsx","views/Show/ShowContainer.tsx","views/Episode/styles.ts","views/Episode/CastCrewInformation.tsx","views/Episode/EpisodeContainer.tsx","layouts/App/AppLayout.tsx","layouts/App/routes.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","appBar","backgroundColor","transform","zIndex","toolBar","breakpoints","up","padding","spacing","title","flexGrow","color","palette","text","primary","button","textTransform","Header","_ref","toggleDarkTheme","classes","_jsx","React","children","AppBar","position","className","_jsxs","Toolbar","Typography","variant","component","Link","to","Avatar","alt","src","style","width","Button","startIcon","NightsStayOutlinedIcon","onClick","ratingText","display","alignItems","RatingInformation","ratingValue","Rating","defaultValue","precision","max","readOnly","size","avatarItem","gap","margin","large","height","AvatarItem","primaryText","secondaryText","image","root","detailsText","rating","fontSize","cardHeader","paddingBottom","cardContent","paddingTop","SideInformation","data","Card","CardHeader","CardContent","Object","keys","map","key","index","concat","parseFloat","body","link","textDecoration","secondary","rootIcon","errorTitle","fontWeight","marginTop","pageTitle","justifyContent","genres","flexWrap","episodeItemHeader","episodeItemGridContainer","episodeItemHeaderSpace","paddingLeft","episodeItemText","overflow","textOverflow","WebkitBoxOrient","WebkitLineClamp","castInfoContainer","showSeasonEpisodesTab","marginBottom","imageRoot","background","paper","imageList","Config","API_BASE_URL","process","REACT_APP_API_BASE_URL","singleton","constructor","api","this","axios","create","get","path","queryStringData","setHeaders","url","object","URLSearchParams","queryString","entries","reduce","prev","val","append","String","toString","length","objectToUrlParams","response","getResponse","status","Error","statusText","method","headers","includes","Accept","defaults","useApiClient","setData","loading","setLoading","loadData","async","ApiClient","error","refetch","DateFormat","formatDateLong","dateVal","format","Date","getYear","getFullYear","EpisodeItem","episode","Grid","container","item","lg","md","xs","id","CardMedia","medium","name","season","number","airdate","dangerouslySetInnerHTML","__html","summary","average","Divider","ShowSeasonsEpisodes","showId","useParams","seasonId","setSeasonId","useState","episodes","setEpisodes","seasons","getEpisode","useCallback","useEffect","Fragment","Tabs","value","indicatorColor","Tab","label","Pagination","count","hidePrevButton","hideNextButton","onChange","handleChangePage","event","seasonNumber","find","CastInformation","casts","cast","person","character","original","ShowImages","images","ImageList","cols","ImageListItem","resolutions","type","ShowContainer","_show$ended","_show$genres","sideInformation","setInformation","show","duration","premiered","ended","prepareSideInformationData","_show$network$name","_show$network","_show$schedule$days$","_show$status","_show$type","Network","network","Schedule","schedule","days","Status","Runtime","runtime","LinearProgress","CardActions","disableSpacing","Tooltip","IconButton","FavoriteIcon","ShareIcon","genre","Chip","pageSubtitle","CastCrewInformation","_episode$_embedded","_episode$_embedded$gu","_episode$_embedded2","_episode$_embedded2$g","_episode$_embedded3","_episode$_embedded3$g","_episode$_embedded4","_episode$_embedded4$g","episodeId","_embedded","guestcast","_cast$person$image$or","_cast$person$image","guestcrew","crew","_crew$person$image$or","_crew$person$image","guestCrewType","EpisodeContainer","_episode$_embedded$sh","_episode$_embedded2$s","_episode$_embedded3$s","_episode$_embedded3$s2","Number","Breadcrumbs","href","ChevronLeftIcon","main","AppLayout","routes","marginLeft","Switch","_ref2","Component","render","routeProps","_createElement","Route","componentProps","Redirect","App","props","super","state","isDark","customTheme","createTheme","MuiThemeProvider","CssBaseline","HashRouter","setState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7b1c75c.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: \"transparent\",\r\n    transform: \"unset\",\r\n    zIndex: 1,\r\n  },\r\n\r\n  toolBar: {\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      padding: theme.spacing(0, 8.8),\r\n    },\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: theme.palette.text.primary,\r\n  },\r\n\r\n  button: {\r\n    textTransform: \"none\",\r\n    padding: 0,\r\n  },\r\n}));\r\n","import { AppBar, Toolbar, Typography, Button, Avatar } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport NightsStayOutlinedIcon from \"@material-ui/icons/NightsStayOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  toggleDarkTheme: () => void;\r\n}\r\n\r\nexport const Header: React.FC<Props> = ({ toggleDarkTheme }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar className={classes.toolBar}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            component={Link}\r\n            to=\"/\"\r\n          >\r\n            <Avatar\r\n              variant={\"rounded\"}\r\n              alt=\"The image\"\r\n              src=\"https://static.tvmaze.com/images/tvm-header-logo.png\"\r\n              style={{\r\n                width: 200,\r\n              }}\r\n            />\r\n          </Typography>\r\n          <Button\r\n            className={classes.button}\r\n            startIcon={<NightsStayOutlinedIcon />}\r\n            onClick={toggleDarkTheme}\r\n          >\r\n            Dark Mode\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  ratingText: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n","import { Typography } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Rating } from \"@material-ui/lab\";\r\n\r\ninterface Props {\r\n  ratingValue: string;\r\n}\r\n\r\nexport const RatingInformation: React.FC<Props> = ({ ratingValue }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.ratingText}>\r\n        <Rating defaultValue={1} precision={1} max={1} readOnly size=\"large\" />\r\n        <Typography variant=\"h6\">{ratingValue} </Typography>\r\n        <Typography variant=\"subtitle2\">/10</Typography>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  avatarItem: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    gap: theme.spacing(2),\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n}));\r\n","import { Typography, Avatar } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\n\r\ninterface Props {\r\n  primaryText: string;\r\n  secondaryText: string;\r\n  image: string;\r\n}\r\n\r\nexport const AvatarItem: React.FC<Props> = ({\r\n  primaryText,\r\n  secondaryText,\r\n  image,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.avatarItem}>\r\n        <Avatar src={image} className={classes.large} />\r\n        <div>\r\n          <Typography variant=\"subtitle2\">\r\n            <strong>{primaryText}</strong>\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\">{secondaryText}</Typography>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 230,\r\n  },\r\n  detailsText: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    gap: theme.spacing(1),\r\n  },\r\n  rating: {\r\n    fontSize: \"14px\",\r\n  },\r\n  cardHeader: {\r\n    paddingBottom: 0,\r\n  },\r\n  cardContent: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n}));\r\n","import { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Rating } from \"@material-ui/lab\";\r\n\r\ninterface Props {\r\n  data: { [key: string]: string };\r\n  title: string;\r\n  ratingValue: string;\r\n}\r\n\r\nexport const SideInformation: React.FC<Props> = ({\r\n  data,\r\n  title,\r\n  ratingValue,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Card className={classes.root}>\r\n        <CardHeader title={title} className={classes.cardHeader} />\r\n        <CardContent className={classes.cardContent}>\r\n          {Object.keys(data).map((key, index) => {\r\n            return (\r\n              <Typography variant=\"caption\" key={index}>\r\n                <div className={classes.detailsText}>\r\n                  <b>{`${key}: `}</b>\r\n                  {data[key]}\r\n                </div>\r\n              </Typography>\r\n            );\r\n          })}\r\n          <Typography variant=\"caption\" component=\"span\">\r\n            <div className={classes.detailsText}>\r\n              <b>Rating: </b>\r\n              <Rating\r\n                defaultValue={parseFloat(ratingValue ?? 0)}\r\n                precision={0.1}\r\n                max={10}\r\n                readOnly\r\n                className={classes.rating}\r\n                size=\"small\"\r\n              />\r\n            </div>\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: theme.spacing(0, 4, 4, 4),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      padding: theme.spacing(0, 8, 8, 8),\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n  root: {\r\n    width: 230,\r\n  },\r\n  rootIcon: {\r\n    width: 230,\r\n  },\r\n  errorTitle: {\r\n    fontWeight: \"bold\",\r\n    marginTop: theme.spacing(5),\r\n  },\r\n\r\n  pageTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n\r\n  genres: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n\r\n  episodeItemHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  episodeItemGridContainer: {\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n  episodeItemHeaderSpace: {\r\n    paddingLeft: theme.spacing(2),\r\n  },\r\n  episodeItemText: {\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    display: \"-webkit-box\",\r\n    WebkitBoxOrient: \"vertical\",\r\n    WebkitLineClamp: 5,\r\n  },\r\n  castInfoContainer: {\r\n    paddingTop: theme.spacing(10),\r\n  },\r\n  showSeasonEpisodesTab: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  imageRoot: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  imageList: {\r\n    flexWrap: \"nowrap\",\r\n  },\r\n}));\r\n","const env = process.env;\r\n\r\nexport const Config = {\r\n  API_BASE_URL: env.REACT_APP_API_BASE_URL || \"https://api.tvmaze.com\", // read the base url from env variable, if not present, there is fallback value\r\n};\r\n","import axios, { AxiosInstance, AxiosResponse } from \"axios\";\r\nimport { Config } from \"./config\";\r\nimport { objectToUrlParams } from \"./lib\";\r\n\r\nclass APIClient {\r\n  private api: AxiosInstance;\r\n\r\n  constructor() {\r\n    this.api = axios.create();\r\n  }\r\n\r\n  public async get<T>(\r\n    path: string,\r\n    queryStringData?: { [key: string]: string | number }\r\n  ) {\r\n    await this.setHeaders(\"GET\");\r\n\r\n    const url = `${path}${objectToUrlParams(queryStringData)}`;\r\n    const response = await this.api.get<T>(`${Config.API_BASE_URL}${url}`);\r\n    return this.getResponse(response);\r\n  }\r\n\r\n  private getResponse<T>(response: AxiosResponse<T>) {\r\n    if (response.status !== 200) {\r\n      throw new Error(response.statusText);\r\n    }\r\n    return response.data;\r\n  }\r\n\r\n  private async setHeaders(method: \"GET\") {\r\n    const headers: any = {};\r\n\r\n    if ([\"GET\"].includes(method)) {\r\n      headers.Accept = \"application/json\";\r\n    }\r\n\r\n    this.api.defaults.headers = headers;\r\n  }\r\n}\r\n\r\nconst singleton = new APIClient();\r\n\r\nexport { singleton as ApiClient };\r\n","export function objectToUrlParams(object?: { [key: string]: any }) {\r\n  if (!object) {\r\n    return new URLSearchParams();\r\n  }\r\n\r\n  const queryString = Object.entries(object).reduce<URLSearchParams>(\r\n    (prev, [key, val]) => {\r\n      if (typeof val !== 'undefined' && val !== null) {\r\n        prev.append(key, String(val));\r\n      }\r\n\r\n      return prev;\r\n    },\r\n    new URLSearchParams(),\r\n  );\r\n\r\n  return queryString.toString().length > 0 ? `?${queryString}` : '';\r\n}\r\n","import * as React from \"react\";\r\nimport { ApiClient } from \"../ApiClient\";\r\n\r\nexport function useApiClient<T>(\r\n  url: string,\r\n  queryStringData?: { [key: string]: any }\r\n): [{ data?: T; loading: boolean; refetch: () => void }] {\r\n  const [data, setData] = React.useState<T>();\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const loadData = React.useCallback(\r\n    async function loadData() {\r\n      try {\r\n        setLoading(true);\r\n        const response = await ApiClient.get<T>(url, queryStringData);\r\n        if (!response) {\r\n          return;\r\n        }\r\n        setData(response);\r\n      } catch (error) {\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n    [url, queryStringData]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  return [{ data, loading, refetch: loadData }];\r\n}\r\n","export const DateFormat = {\r\n  DAY_LABEL: \"eeee\",\r\n  LONG: \"eeee, d MMMM yyyy\",\r\n  LONG__COMPACT: \"eeeeee, d MMM yyyy\",\r\n  LONG_NO_YEAR: \"eeee, d MMMM\",\r\n  LONG_DAY: \"eeee d\",\r\n  MEDIUM: \"d MMMM yyyy\",\r\n  MEDIUM_COMPACT: \"d MMM yy\",\r\n  MEDIUM_DAY: \"eee d\",\r\n  SORT_DAY: \"eeeeee d\",\r\n  SHORT: \"dd/MM/yyyy\",\r\n  FILENAME_DATE: \"yyyyMMdd\",\r\n\r\n  DAY_MONTH: \"d MMM\",\r\n  YEAR_ONLY: \"yyyy\",\r\n  DAY_ONLY: \"dd\",\r\n\r\n  SHORT_DAY_NAME_ONLY: \"eeeeee\",\r\n  MONTH_NAME_ONLY: \"MMMM\",\r\n  MONTH_NAME_YEAR: \"MMMM yyyy\",\r\n};\r\n","import { DateFormat } from \"./DateFormat\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport function formatDateLong(dateVal: string) {\r\n  return format(new Date(dateVal), DateFormat.LONG);\r\n}\r\nexport function formatDateLongCompact(dateVal: string) {\r\n  return format(new Date(dateVal), DateFormat.MEDIUM);\r\n}\r\n\r\nexport function getYear(dateVal: string) {\r\n  const date = new Date(dateVal);\r\n  return date.getFullYear();\r\n}\r\n","import { Card, CardMedia, Divider, Typography, Grid } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Episode } from \"models/Episode\";\r\nimport { RatingInformation } from \"../../layouts/App\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { formatDateLong } from \"util/helper\";\r\n\r\ninterface Props {\r\n  episode: Episode;\r\n}\r\n\r\n/**\r\n *\r\n * Episode item which is rendered as list item in Show container component.\r\n */\r\nexport const EpisodeItem: React.FC<Props> = ({ episode }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid\r\n        container\r\n        justifyContent=\"space-between\"\r\n        className={classes.episodeItemGridContainer}\r\n      >\r\n        <Grid item lg={3} md={3} xs={12}>\r\n          <Card>\r\n            <Link to={`/episodes/${episode.id}`}>\r\n              <CardMedia\r\n                image={episode?.image.medium}\r\n                title={episode?.name}\r\n                component=\"img\"\r\n              />\r\n            </Link>\r\n          </Card>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={9}\r\n          md={9}\r\n          xs={12}\r\n          className={classes.episodeItemHeaderSpace}\r\n        >\r\n          <div className={classes.episodeItemHeader}>\r\n            <Typography\r\n              className={classes.link}\r\n              color=\"textPrimary\"\r\n              variant=\"subtitle1\"\r\n              component={Link}\r\n              to={`/episodes/${episode.id}`}\r\n            >\r\n              <strong>\r\n                {`S${episode.season}.E${episode.number} ∙ ${episode.name}`}\r\n              </strong>\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              {formatDateLong(episode.airdate)}\r\n            </Typography>\r\n          </div>\r\n          <Typography\r\n            variant=\"subtitle2\"\r\n            className={classes.episodeItemText}\r\n            dangerouslySetInnerHTML={{\r\n              __html: episode.summary,\r\n            }}\r\n          />\r\n          {episode.rating.average && (\r\n            <RatingInformation ratingValue={episode.rating.average} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <Divider />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { Tabs, Tab } from \"@material-ui/core\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useParams } from \"react-router\";\r\nimport { useApiClient } from \"../../hooks\";\r\nimport { Episode } from \"models/Episode\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { Season } from \"models/Season\";\r\nimport { ApiClient } from \"ApiClient\";\r\nimport { EpisodeItem } from \"./EpisodeItem\";\r\n\r\ninterface Params {\r\n  showId: string;\r\n}\r\n\r\n/**\r\n *\r\n * This is season and episode information container.\r\n */\r\nexport const ShowSeasonsEpisodes: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { showId } = useParams<Params>();\r\n  const [seasonId, setSeasonId] = React.useState<number | undefined>();\r\n  const [episodes, setEpisodes] = React.useState<Episode[] | undefined>();\r\n\r\n  const [{ data: seasons }] = useApiClient<Season[]>(\r\n    `/shows/${showId}/seasons`\r\n  );\r\n  const handleChangePage = (event: object, seasonNumber: number) => {\r\n    const season = seasons?.find((season) => season.number === seasonNumber);\r\n    season && setSeasonId(season.id);\r\n  };\r\n  const getEpisode = useCallback(async () => {\r\n    const episodes = await ApiClient.get<Episode[]>(\r\n      `/seasons/${seasonId}/episodes`\r\n    );\r\n    setEpisodes(episodes);\r\n  }, [seasonId]);\r\n\r\n  React.useEffect(() => {\r\n    if (!seasons?.length) return;\r\n    setSeasonId(seasons[0].id);\r\n  }, [seasons]);\r\n\r\n  React.useEffect(() => {\r\n    if (!seasonId) return;\r\n    getEpisode();\r\n  }, [seasonId, getEpisode]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Tabs\r\n        value={0}\r\n        indicatorColor=\"primary\"\r\n        className={classes.showSeasonEpisodesTab}\r\n      >\r\n        <Tab label=\"Seasons\" />\r\n      </Tabs>\r\n      <Pagination\r\n        count={seasons?.length}\r\n        size=\"large\"\r\n        hidePrevButton\r\n        hideNextButton\r\n        onChange={handleChangePage}\r\n      />\r\n      {episodes?.map((episode, index) => {\r\n        return <EpisodeItem episode={episode} key={index} />;\r\n      })}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useParams } from \"react-router\";\r\nimport { useApiClient } from \"../../hooks\";\r\nimport { AvatarItem } from \"../../layouts/App\";\r\nimport { Cast } from \"models/Cast\";\r\n\r\ninterface Params {\r\n  showId: string;\r\n}\r\n\r\n/**\r\n *\r\n * Cast container component which renders cast information of the show\r\n */\r\nexport const CastInformation: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { showId } = useParams<Params>();\r\n  const [{ data: casts }] = useApiClient<Cast[]>(`/shows/${showId}/cast`);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.castInfoContainer}>\r\n        <Typography variant=\"h4\">TOP CAST</Typography>\r\n\r\n        <Grid container justifyContent=\"space-between\">\r\n          {casts?.map((cast, index) => {\r\n            return (\r\n              <Grid item lg={12} md={12} xs={12} key={index}>\r\n                <AvatarItem\r\n                  primaryText={cast.person.name}\r\n                  secondaryText={` as ${cast.character.name}`}\r\n                  image={cast.person.image.original}\r\n                />\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { ImageList, ImageListItem } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useParams } from \"react-router\";\r\nimport { useApiClient } from \"../../hooks\";\r\nimport { ShowImage } from \"models\";\r\n\r\ninterface Params {\r\n  showId: string;\r\n}\r\n\r\n/**\r\n *\r\n * Show images component which renders the images, posters of the show.\r\n */\r\nexport const ShowImages: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { showId } = useParams<Params>();\r\n  const [{ data: images }] = useApiClient<ShowImage[]>(\r\n    `/shows/${showId}/images`\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.imageRoot}>\r\n        <ImageList className={classes.imageList} cols={2.5}>\r\n          {images?.map((item) => (\r\n            <ImageListItem key={item.id}>\r\n              <img src={item.resolutions.original.url} alt={item.type} />\r\n            </ImageListItem>\r\n          ))}\r\n        </ImageList>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardActions,\r\n  Typography,\r\n  IconButton,\r\n  Chip,\r\n  Tooltip,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { Show } from \"../../models\";\r\nimport { useParams } from \"react-router\";\r\nimport { useApiClient } from \"../../hooks\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { ShowSeasonsEpisodes } from \"./ShowSeasonsEpisodes\";\r\nimport { CastInformation } from \"./CastInformation\";\r\nimport { RatingInformation } from \"../../layouts/App\";\r\nimport { SideInformation } from \"../../layouts/App\";\r\nimport { ShowImages } from \"./ShowImages\";\r\nimport { getYear } from \"util/helper\";\r\n\r\ninterface Params {\r\n  showId: string;\r\n}\r\n\r\n/**\r\n *\r\n * Show container which contains the details of show.\r\n */\r\n\r\nexport const ShowContainer: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { showId } = useParams<Params>();\r\n  const [sideInformation, setInformation] = React.useState<\r\n    { [key: string]: string } | undefined\r\n  >();\r\n  const [{ data: show, loading }] = useApiClient<Show>(`/shows/${showId}`);\r\n\r\n  const duration = show?.premiered\r\n    ? `${getYear(show?.premiered)} - ${getYear(show?.ended ?? \"\")}`\r\n    : \"\";\r\n\r\n  const prepareSideInformationData = useCallback(() => {\r\n    const data = {\r\n      Network: show?.network?.name ?? \"\",\r\n      Schedule: show?.schedule.days[0] ?? \"\",\r\n      Status: show?.status ?? \"\",\r\n      \"Show type\": show?.type ?? \"\",\r\n      Runtime: show?.runtime ? `${show?.runtime} minutes` : \"\",\r\n    };\r\n    setInformation(data);\r\n  }, [show]);\r\n\r\n  React.useEffect(() => {\r\n    if (!show) return;\r\n    prepareSideInformationData();\r\n  }, [prepareSideInformationData, show]);\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.body} data-testid=\"show-container\">\r\n        {loading && <LinearProgress />}\r\n        {!show && !loading && (\r\n          <Typography variant=\"h4\" className={classes.errorTitle} color=\"error\">\r\n            No show found\r\n          </Typography>\r\n        )}\r\n        {show && (\r\n          <div>\r\n            <div className={classes.pageTitle}>\r\n              <div>\r\n                <Typography variant=\"h3\">{show.name}</Typography>\r\n                <Typography variant=\"caption\">{duration}</Typography>\r\n              </div>\r\n              <div>\r\n                <Typography variant=\"subtitle2\">RATING</Typography>\r\n                <RatingInformation ratingValue={show.rating.average} />\r\n              </div>\r\n            </div>\r\n            <Grid container justifyContent=\"space-between\">\r\n              <Grid item lg={2} md={3} xs={12}>\r\n                <Card className={classes.root}>\r\n                  <CardMedia\r\n                    image={show?.image.original}\r\n                    title={show?.name}\r\n                    component=\"img\"\r\n                  />\r\n                </Card>\r\n                <CardActions disableSpacing>\r\n                  <Tooltip title=\"Add to favorites\">\r\n                    <IconButton>\r\n                      <FavoriteIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip title=\"Share\">\r\n                    <IconButton>\r\n                      <ShareIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </CardActions>\r\n                <div className={classes.genres}>\r\n                  {show?.genres?.map((genre, index) => {\r\n                    return (\r\n                      <Chip\r\n                        variant=\"outlined\"\r\n                        key={index}\r\n                        label={genre}\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Grid>\r\n              <Grid item lg={7} md={5} xs={12}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: show.summary,\r\n                  }}\r\n                />\r\n\r\n                <ShowImages />\r\n              </Grid>\r\n              <Grid item lg={2} md={3} xs={12}>\r\n                {sideInformation && (\r\n                  <SideInformation\r\n                    title={\"Show info\"}\r\n                    data={sideInformation}\r\n                    ratingValue={show.rating.average}\r\n                  />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container justifyContent=\"space-between\">\r\n              <Grid item lg={8} md={8} xs={12}>\r\n                <ShowSeasonsEpisodes />\r\n              </Grid>\r\n              <Grid item lg={2} md={3} xs={12}>\r\n                <CastInformation />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: theme.spacing(0, 4, 4, 4),\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      padding: theme.spacing(0, 8, 8, 8),\r\n    },\r\n  },\r\n\r\n  link: {\r\n    textDecoration: \"none\",\r\n    display: \"flex\",\r\n    padding: theme.spacing(2, 0),\r\n  },\r\n  root: {\r\n    width: 230,\r\n  },\r\n  errorTitle: {\r\n    fontWeight: \"bold\",\r\n    marginTop: theme.spacing(5),\r\n  },\r\n\r\n  pageTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  pageSubtitle: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  genres: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  castInfoContainer: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n}));\r\n","import { Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useParams } from \"react-router\";\r\nimport { useApiClient } from \"../../hooks\";\r\nimport { AvatarItem } from \"../../layouts/App\";\r\nimport { Episode } from \"models\";\r\n\r\ninterface Params {\r\n  episodeId: string;\r\n}\r\n\r\n/**\r\n *\r\n * Cast and Crew container component which renders cast and crew information of the episode\r\n */\r\nexport const CastCrewInformation: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { episodeId } = useParams<Params>();\r\n  const [{ data: episode }] = useApiClient<Episode>(\r\n    `/episodes/${episodeId}?embed[]=guestcast&embed[]=guestcrew`\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!!episode?._embedded?.guestcast?.length && (\r\n        <div className={classes.castInfoContainer}>\r\n          <Typography variant=\"h4\">TOP CAST</Typography>\r\n          <Grid container>\r\n            {episode?._embedded?.guestcast?.map((cast, index) => {\r\n              return (\r\n                <Grid item lg={3} md={6} xs={12} key={index}>\r\n                  <AvatarItem\r\n                    primaryText={cast.person.name}\r\n                    secondaryText={` as ${cast.character.name}`}\r\n                    image={cast.person.image?.original ?? \"\"}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n      {episode?._embedded?.guestcrew?.length && (\r\n        <div className={classes.castInfoContainer}>\r\n          <Typography variant=\"h4\">TOP CREW</Typography>\r\n          {/* <div>{episode}</div> */}\r\n          <Grid container>\r\n            {episode?._embedded?.guestcrew?.map((crew, index) => {\r\n              return (\r\n                <Grid item lg={3} md={6} xs={12} key={index}>\r\n                  <AvatarItem\r\n                    primaryText={crew.person.name}\r\n                    secondaryText={crew.guestCrewType}\r\n                    image={crew.person.image?.original ?? \"\"}\r\n                  />\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  Typography,\r\n  Breadcrumbs,\r\n  Link,\r\n  Chip,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useStyles } from \"./styles\";\r\nimport { useParams } from \"react-router\";\r\nimport { useApiClient } from \"../../hooks\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { Episode } from \"models/Episode\";\r\nimport { RatingInformation } from \"../../layouts/App\";\r\nimport { SideInformation } from \"../../layouts/App\";\r\nimport { CastCrewInformation } from \"./CastCrewInformation\";\r\nimport { formatDateLong, formatDateLongCompact } from \"util/helper\";\r\n\r\ninterface Params {\r\n  episodeId: string;\r\n}\r\n\r\n/**\r\n *\r\n * Episode container component which is the root page of Episode. It renders the episode details.\r\n */\r\nexport const EpisodeContainer: React.FC = () => {\r\n  const classes = useStyles();\r\n  const { episodeId } = useParams<Params>();\r\n  const [{ data: episode, loading }] = useApiClient<Episode>(\r\n    `/episodes/${episodeId}?embed=show`\r\n  );\r\n  const [sideInformation, setInformation] = React.useState<\r\n    { [key: string]: string } | undefined\r\n  >();\r\n\r\n  const prepareSideInformationData = useCallback(() => {\r\n    const data = {\r\n      Number: `Season ${episode?.season}, Episode ${episode?.number}`,\r\n      \"Air date\": episode?.airdate\r\n        ? formatDateLongCompact(episode?.airdate)\r\n        : \"\",\r\n      Runtime: episode?.runtime ? `${episode?.runtime} minutes` : \"\",\r\n    };\r\n    setInformation(data);\r\n  }, [episode]);\r\n\r\n  React.useEffect(() => {\r\n    if (!episode) return;\r\n    prepareSideInformationData();\r\n  }, [episode, prepareSideInformationData]);\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.body} data-testid=\"episode-container\">\r\n        {loading && <LinearProgress />}\r\n        {!episode && !loading && (\r\n          <Typography variant=\"h4\" className={classes.errorTitle} color=\"error\">\r\n            No episode found\r\n          </Typography>\r\n        )}\r\n        {episode && (\r\n          <div>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n              <Link\r\n                color=\"inherit\"\r\n                href={`#/shows/${episode._embedded?.show?.id}`}\r\n                className={classes.link}\r\n              >\r\n                <ChevronLeftIcon />\r\n                {episode._embedded?.show?.name}\r\n              </Link>\r\n            </Breadcrumbs>\r\n            <div className={classes.pageTitle}>\r\n              <div className={classes.pageSubtitle}>\r\n                <Typography variant=\"h3\">{episode?.name}</Typography>\r\n                <Typography variant=\"caption\">\r\n                  <strong>{`S${episode?.season}.E${episode?.number} `}</strong>\r\n                </Typography>\r\n                <Typography variant=\"caption\">{`Episode aired on ${formatDateLong(\r\n                  episode?.airdate\r\n                )}`}</Typography>\r\n              </div>\r\n              {episode?.rating.average && (\r\n                <div>\r\n                  <Typography variant=\"subtitle2\">RATING</Typography>\r\n                  <RatingInformation ratingValue={episode?.rating.average} />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <Grid container justifyContent=\"space-between\">\r\n              <Grid item lg={2} md={3} xs={12}>\r\n                <Card className={classes.root}>\r\n                  <CardMedia\r\n                    image={episode?.image.original}\r\n                    title={episode?.name}\r\n                    component=\"img\"\r\n                  />\r\n                </Card>\r\n              </Grid>\r\n              <Grid item lg={7} md={5} xs={12}>\r\n                <div className={classes.genres}>\r\n                  {episode._embedded?.show?.genres?.map((genre, index) => {\r\n                    return (\r\n                      <Chip\r\n                        variant=\"outlined\"\r\n                        key={index}\r\n                        label={genre}\r\n                        size=\"small\"\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: episode.summary,\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={2} md={3} xs={12}>\r\n                {sideInformation && (\r\n                  <SideInformation\r\n                    title={\"Episode info\"}\r\n                    data={sideInformation}\r\n                    ratingValue={episode.rating.average}\r\n                  />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <CastCrewInformation />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Header } from \"./components\";\r\nimport { getRoutes } from \"./routes\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  main: {\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  toggleDarkTheme: () => void;\r\n}\r\n\r\nexport const AppLayout: React.FC<Props> = ({ toggleDarkTheme }) => {\r\n  const classes = useStyles();\r\n  const routes = getRoutes();\r\n  return (\r\n    <React.Fragment>\r\n      <Header toggleDarkTheme={toggleDarkTheme} />\r\n\r\n      <main\r\n        className={classes.main}\r\n        style={{\r\n          marginLeft: 0,\r\n        }}\r\n      >\r\n        {routes && (\r\n          <Switch>\r\n            {routes.map(\r\n              ({ component: Component, render, ...routeProps }, index) => (\r\n                <Route\r\n                  {...routeProps}\r\n                  key={index.toString()}\r\n                  render={(componentProps) => (\r\n                    <React.Fragment>\r\n                      {Component ? (\r\n                        <Component {...componentProps} />\r\n                      ) : render ? (\r\n                        render(componentProps)\r\n                      ) : null}\r\n                    </React.Fragment>\r\n                  )}\r\n                />\r\n              )\r\n            )}\r\n            <Route\r\n              path=\"/\"\r\n              render={() => {\r\n                return <Redirect to=\"/shows/1955\" />; // the show id is hard coded\r\n              }}\r\n            ></Route>\r\n          </Switch>\r\n        )}\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { RouteProps } from \"react-router-dom\";\r\nimport { EpisodeContainer, ShowContainer } from \"../../views\";\r\n\r\nexport function getRoutes() {\r\n  const routes: RouteProps[] = [\r\n    {\r\n      path: \"/home\",\r\n      component: ShowContainer,\r\n    },\r\n    {\r\n      path: \"/shows/:showId\",\r\n      component: ShowContainer,\r\n    },\r\n    {\r\n      path: \"/episodes/:episodeId\",\r\n      component: EpisodeContainer,\r\n    },\r\n  ];\r\n  return routes;\r\n}\r\n","import { AppLayout } from \"./layouts\";\r\nimport * as React from \"react\";\r\nimport { HashRouter  } from \"react-router-dom\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\n\r\ninterface Props {}\r\n\r\ninterface CustomState {\r\n  isDark: boolean;\r\n}\r\n\r\nexport default class App extends React.Component<Props, CustomState> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      isDark: true,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const customTheme = createTheme({\r\n      palette: {\r\n        type: this.state.isDark ? \"dark\" : \"light\",\r\n      },\r\n    });\r\n\r\n    const toggleDarkTheme = () => {\r\n      this.setState({ isDark: !this.state.isDark });\r\n    };\r\n\r\n    return (\r\n      <MuiThemeProvider theme={customTheme}>\r\n        <CssBaseline />\r\n        <HashRouter>\r\n          <AppLayout toggleDarkTheme={toggleDarkTheme} />\r\n        </HashRouter>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}